name: "Setup Zephyr Project"
description: "Setup a Zephyr base project using west and downloading the Zephyr SDK"

inputs:
  sdk_version:
    description: "Zephyr SDK version"
    required: false
    default: "0.17.0"
  toolchains:
    description: "Space-separated list of toolchains to setup (e.g. 'arm-zephyr-eabi x86_64-zephyr-elf')"
    required: false
    default: "arm-zephyr-eabi x86_64-zephyr-elf"

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        pip3 install -U pip wheel
        pip3 install west

        sudo apt-get update -y
        sudo apt-get install -y ninja-build ccache g++-multilib gperf
        if [ "${{ runner.arch }}" = "X64" ]; then
          sudo apt-get install -y libc6-dev-i386
        fi

    - name: West init and update
      shell: bash
      run: |
        if [ -f manifest-repo/west.yml ]; then
          west init -l --mf manifest-repo/west.yml $GITHUB_WORKSPACE
        else
          west init -l
        fi
        west update -o=--depth=1 -n

    - name: Environment setup
      shell: bash
      run: |
        runner="${{ runner.os }}-${{ runner.arch }}"
        case "$runner" in
          Linux-X64)   sdk_variant="linux-x86_64" ;;
          Linux-ARM64) sdk_variant="linux-aarch64" ;;
          *) echo "Unsupported runner platform: $runner"; exit 1 ;;
        esac

        pip_cache_path="$HOME/.cache/pip"
        sdk_ext="tar.xz"
        setup_file="./setup.sh"
        setup_opt="-"

        echo "SDK_VERSION=${{ inputs.sdk_version }}" >> $GITHUB_ENV
        echo "SDK_FILE=zephyr-sdk-${{ inputs.sdk_version }}_${sdk_variant}_minimal.${sdk_ext}" >> $GITHUB_ENV
        echo "PIP_CACHE_PATH=${pip_cache_path}" >> $GITHUB_ENV
        echo "SETUP_FILE=${setup_file}" >> $GITHUB_ENV
        echo "SETUP_OPT=${setup_opt}" >> $GITHUB_ENV

    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ${{ env.PIP_CACHE_PATH }}
        key: pip-${{ runner.os }}

    - name: Install Python packages
      shell: bash
      run: |
        west packages pip --install --ignore-venv-check || pip3 install -r zephyr/scripts/requirements.txt

    - name: Cache Zephyr SDK
      id: cache-toolchain
      uses: actions/cache@v4
      with:
        path: ./zephyr-sdk
        key: ${{ env.SDK_FILE }}-${{ inputs.toolchains// /- }}

    - if: ${{ steps.cache-toolchain.outputs.cache-hit != 'true' }}
      name: Download Zephyr SDK
      shell: bash
      run: |
        wget --progress=dot:giga https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${SDK_VERSION}/${SDK_FILE}
        mkdir zephyr-sdk
        tar xvf $SDK_FILE -C zephyr-sdk --strip-components=1

    - name: Setup Zephyr SDK
      working-directory: ./zephyr-sdk
      shell: bash
      run: |
        chmod +x ${SETUP_FILE}
        for toolchain in ${{ inputs.toolchains }}; do
            echo "Setting up toolchain: $toolchain"
            ${SETUP_FILE} ${SETUP_OPT}t $toolchain
        done
        if [ ! -d sysroots ]; then
            ${SETUP_FILE} ${SETUP_OPT}h
        fi
        ${SETUP_FILE} ${SETUP_OPT}c
